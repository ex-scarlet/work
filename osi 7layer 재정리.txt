osi 1계층 : 물리 계층
- 물리적인 전기적, 기계적, 기능적 특성을 이용하여 통신 케이블로 데이터를 전송합니다.
  이 계층에서 사용되는 통신 단위는 비트이며 이것은 0과 1로만 나타내어지는 전기적인 온오프 신호와 같습니다.
  마찬가지로 이 계층에서는 데이터를 전송만 할 뿐 이 데이터가 무슨 종류인지, 어떤 에러가 있는지는 신경쓰지 않습니다.

1계층에 속하는 대표적인 장비로는 통신 케이블, 리피터, 허브 등이 있습니다.


osi 2계층 : 데이터 링크 계층

- 물리계층을 통해 송수신되는 정보의 오류와 흐름을 관리하여 안전한 정보의 전달을 수행할 수 있도록 도와주는 역할을 합니다.
  따라서 통신에서의 오류도 찾아주고 재전송도 하는 기능을 가지고 있습니다.
- 2계층에서는 맥(MAC) 주소를 가지고 통신하게 됩니다.
  이 계층에서 전송되는 단위를 프레임이라고 하며, 대표적인 장비로는 브리지, 스위치 등이 있습니다.

브리지나 스위치를 통해 맥 주소를 가지고 물리계층에서 받은 정보를 전달합니다.

데이터 링크 계층은  point to point 간 신뢰성 있는 전송을 보장하기 위한 계층입니다.
CRC 기반의 오류 제어와 흐름 제어가 필요합니다. 네트워크 위의 개체들 간 데이터를 전달하고,
물리 계층에서 발생할 수 있는 오류를 찾아내고, 수정하는 데 필요한 기능적, 절차적 수단을 제공합니다.

주소 값은 물리적으로 할당 받는데, 이는 네트워크 카드가 만들어질때부터 맥 주소가 정해져 있다는 뜻입니다.
주소 체계는 계층이 없는 단일 구조입니다. 데이터 링크 계층에서 가장 잘 알려진 예는 이더넷입니다.
이 외에도 HDLC나 ADCCP같은 point to point 프로토콜이나 패킷 스위칭 네트워크나 LLC, ALOHA
같은 근거리 네트워크용 프로토콜이 있습니다.
네트워크 브릿지나 스위치 등이 2계층에서 동작하며, 직접 이어진 곳에만 연결할 수 있습니다.

->
프레임에 주소 부여(MAC-물리적 주소)
에러 검출 / 재전송 / 흐름 제어

3계층 - 네트워크 계층

이 계층에서 가장 중요한 기능은 데이터를 목적지까지 가장 안전하고 빠르게 전달하는 기능(라우팅) 입니다.
여기에 사용되는 프로토콜의 종류도 다양하고, 라우팅하는 기술도 다양합니다.

3계층은 경로를 선택하고 주소를 정하고 경로에 따라 패킷을 전달해주는 것이 역할입니다.
3계층의 대표적인 장비는 라우터이며, 요즘은 2계층의 장비 중 스위치라는 장비에 라우팅 기능을 장착한 Layer 3 스위치도 있습니다.
(여기서 IP주소를 사용합니다.)

네트워크 계층은 여러개의 노드를 거칠 때 마다 경로를 찾아주는 역할을 하는 계층으로 다양한 길이의 데이터를
네트워크들을 통해 전달하고, 그 과정에서 전송 계층이 요구하는 서비스 품질(QoS)을 제공하기 위한 기능적,
절차적 수단을 제공합니다.

네트워크 계층은 라우팅, 흐름 제어, 세그멘테이션(segmentation/desegmentation), 오류 제어,
인터네트워킹(Internetworking)등을 수행합니다.
라우터가 이 계층에서 동작하고 이 계층에서 동작하는 스위치도 있습니다.
데이터를 연결하는 다른 네트워크를 통해 전달함으로써 인터넷이 가능하게 만드는 계층입니다.
논리적인 주소 구조(IP), 곧 네트워크 관리자가 직접 주소를 할당하는 구조를 가지며, 계층적입니다.
서브넷의 최상위 계층으로 경로를 설정하고, 청구 정보를 관리합니다. 개방형 시스템들의 사이에서 네트워크 연결을
설정, 유지, 해제하는 기능을 부여하고, 전송 계층 사이에 네트워크 서비스 데이터 유닛(NSDU) 를 교환하는 기능을 제공합니다.
->
주소부여(IP), 경로설정(Route)


4계층 : 전송 계층

통신을 활성화하기 위한 계층입니다. 보통 TCP 프로토콜을 이용하며, 포트를 열어서 응용프로그램이 전송을 할 수 있게 합니다.
만약 데이터가 왔다면, 4계층에서 해당 데이터를 하나로 합쳐서 5계층에 던져 줍니다.
단대단 오류제어 및 흐름제어. 이 계층까지는  물리계층에 속합니다

이는 전송 계층은 양 끝단의 사용자들이 신뢰성있는 데이터를 주고 받을 수 있게ㅔ 해 주어, 상위 계층들이 
데이터 전달의 유효성이나 효율성을 생각하지 않도록 합니다.
시퀀스 넘버 기반의 오류 제어 방식을 사용합니다.

전송 계층은특정 연결의 유효성을  제어하고, 일부 프로토콜은 상태 개념이 있고
연결 기반입니다.
이는 전송 계층이 패킷들의 전송이 유효한지 확인하고 전송 실패한 것을 뜻합니다
가장 잘 알려진 전송계층의 예는 TCP입니다.

종단간( end-to-end ) 통신을 다루는 최하위 계층으로 종단간 신뢰성 있고 효율적인 데이터를 전송하며,
기능은 오류검출 및 복구와 흐름제어, 중복검사 등을 수행합니다.
->
패킷 생성 및 전송

TCP 프로토콜

osi 계층모델의 관점에서 전송 계층(4계층) 에 해당합니다.

양종단 호스트 내 프로세스 상호 간에 신뢰적인 연결지향성 서비스를 제공합니다.
1. 신뢰성 있음

패킷 손실, 중복, 순서바뀜 등이 없도록 보장
TCP 하위계층인 IP계층의 신뢰성 없는 서비스에 대해 다방면으로 신뢰성을 제공합니다.

2. 연결지향적

같은 전송계층의 UDP가 비연결성인 것과는 달리 TCP는 연결지향적입니다. 이 경우 느슨한 연결을 가지므로
강한 연결을 의미하는 가상회선이라는 표현보다는 오히려 연결지향적이라고 이야기합니다.
연결 관리를 위한 연결설정 및 연결해제 필요.
양단간 어플리케이션/프로세스는 TCP가 제공하는 연결성 회선을 통하여 서로 통신합니다

UDP 프로토콜

전송 계층의 통신 프로토콜의 하나입니다( TCP에 대비됨 )
신뢰성이 낮은 프로토콜로써 완전성을 보증하지 않으나,
가상회선을 굳이 확립할 필요가 없고 유연하여 효율적 응용의 데이터 전송에 사용됩니다.

1. 비연결성이고, 신뢰성이 없으며, 순서화되지 않은 데이터그램 서비스 제공
-메세지가 제대로 도착했는지 확인하지 않음.(확인응답 없음)
-수신된 메세지의 순서를 맞추지 않음.(순서제어 없음)
-흐름 제어를 위한 피드백을 제공하지 않음.(흐름제어 없음)
-검사합을 제외한 특별한 오류 검출 및 제어 없음.(오류제어 거의 없음)
UDP를 사용하는 프로그램 쪽에서 오류제어 기능을 스스로 갖추어야 함.
-데이터그램 지향의 전송계층용 프로토콜 (논리적인 가상회선 연결이 필요 없음)
비연결 접속상태 하에서 통신함

2. 실시간 응용 및 멀티캐스팅 가능
- 빠른 요청과 응답이 필요한 실시간 응용에 적합
- 여러 다수 지점에 전송 가능 (일대다)

3. 헤더가 단순함
-UDP는 TCP처럼 16비트의 포트번호를 사용하지만 헤더는 고정크기의 8바이트(TCP는 20바이트) 만 사용합니다.
즉, 헤더 처리에 많은 시간과 노력을 요하지 않습니다.

5계층 : 세션 계층

데이터가 통신하기 위한 논리적인 연결을 말합니다. 통신을 하기 위한 대문이라고 보면 됩니다.
하지만 4계층에서도 연결을 맺고 종료할 수 있기 때문에 우리가 어느 계층에서 통신이 끊어졌나 판단하기는 한계가 있습니다.
그러므로 세션계층은 4계층과 무관하게 응용 프로그램 관점에서 보아야 합니다.
세션 설정, 유지, 종료, 전송 중단시 복구 등의 기능이 있습니다.
세션 계층은 양 끝단의 응용 프로세스가 통신을 관리하기 위한 방법을 제공합니다.
동시 송수신 방식(duplex), 반이중 방식(half-duplex), 전이중 방식(Full Duplex)의 통신과 함께, 체크 포인팅과 유휴, 종료, 다시시작
등의 과정을 수행합니다.
이 계층은 TCP/IP 세션을 만들고 없애는 책임을 집니다.

->
통신하는 사용자들을 동기화하고 오류복구 명령들을 일괄적으로 다룬다.
통신을 하기 위한 세션을 확립/유지/중단(운영체제가 해줌)

6계층 : 표현 계층

데이터 표현이 상이한 응용 프로세스의 독립성을 제공하고, 암호화 합니다.

표현 계층은 코드 간의 번역을 담당하여 사용자 시스템에서 데이터의 형식상 차이를 다루는 부담을 응용 계층으로부터 덜어줍니다.
MIME 인코딩이나 암호화 등의 동작이 이 계층에서 이루어집니다. 예를 들면 EBCDIC으로 인코딩된 문서 파일을 ASCII로 인코딩된
파일로 바꾸어 주는 것, 해당 데이터가 TXT인지 IMG인지 GIF인지 JPG인지 구분하는것이 표현 계층의 몫입니다.

7계층 : 응용 계층

최종 목적지로서 HTTP, FTP, SMTP, POP3, IMAP, Telnet등과 같은 프로토콜이 있습니다.
해당 통신 패킷들은 방금 나열한 프로토콜에 의해 모두 처리되며 우리가 사용하는 브라우저나, 메일프로그램은
프로토콜을 보다 쉽게 사용하게 해주는 응용프로그램입니다. 한마디로 모든 통신의 양 끝단은 HTTP와 같은 프로토콜이지
응용프로그램이 아닙니다.

응용계층은 응용프로세스와 직접 관계하여 일반적인 응용 서비스를 수행합니다.
일반적인 응용 서비스는 관련된 응용 프로세스들 사이의 전환을 제공합니다.
응용 서비스의 예로, 가상 터미널(ex: 텔넷) 등이 있습니다.
->
네트워크 소프트웨어 UI 부분, 사용자의 입출력(I/O) 부분

HTTP 프로토콜

웹 상에서 웹 서버 및 웹브라우저 상호 간의 데이터 전송을 위한 응용계층 프로토콜
처음에는 WWW상의 하이퍼텍스트 형태의 문서를 전달하는데 주로 이용
현재에는 이미지 비디오 음성 등 거의 모든 형식의 데이터 전송 가능

